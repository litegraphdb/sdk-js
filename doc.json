{
  "docs": [
    {
      "comment": "/**\r\n * LiteGraph SDK class.\r\n * Extends the SdkBase class.\r\n */",
      "meta": {
        "range": [
          891,
          49364
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 22,
        "columnno": 15,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000067",
          "name": "module.exports",
          "type": "ClassDeclaration",
          "paramnames": [
            "endpoint",
            "tenantGuid",
            "accessKey"
          ]
        }
      },
      "name": "exports",
      "longname": "module.exports",
      "kind": "class",
      "classdesc": "LiteGraph SDK class.\rExtends the SdkBase class.",
      "memberof": "module",
      "scope": "static",
      "description": "Instantiate the SDK.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The endpoint URL.",
          "name": "endpoint",
          "defaultvalue": "http://localhost:8701/"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "The tenant GUID.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "The access key.",
          "name": "accessKey"
        }
      ]
    },
    {
      "comment": "/**\r\n   * Check if a graph exists by GUID.\r\n   * @param {string} guid - The GUID of the graph.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>} - True if the graph exists.\r\n   */",
      "meta": {
        "range": [
          1561,
          1747
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 41,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000086",
          "name": "graphExists",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Check if a graph exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- True if the graph exists."
        }
      ],
      "name": "graphExists",
      "longname": "graphExists",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create a graph.\r\n   * @param {Object} graph - Information about the graph.\r\n   * @param {string} graph.GUID - Globally unique identifier (automatically generated if not provided).\r\n   * @param {string} graph.Name - Name of the graph.\r\n   * @param {Date} graph.CreatedUtc - Creation timestamp in UTC (defaults to now).\r\n   * @param {Object} graph.Data - Object data associated with the graph (default is null).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Graph>} - The created graph.\r\n   */",
      "meta": {
        "range": [
          2345,
          2707
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 56,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000115",
          "name": "createGraph",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "name",
            "data",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a graph.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the graph.",
          "name": "graph"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier (automatically generated if not provided).",
          "name": "graph.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the graph.",
          "name": "graph.Name"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to now).",
          "name": "graph.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Object data associated with the graph (default is null).",
          "name": "graph.Data"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Graph>"
            ]
          },
          "description": "- The created graph."
        }
      ],
      "name": "createGraph",
      "longname": "createGraph",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read all graphs.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Graph[]>} - An array of graphs.\r\n   */",
      "meta": {
        "range": [
          2915,
          3095
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 70,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000168",
          "name": "readGraphs",
          "type": "MethodDefinition",
          "paramnames": [
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read all graphs.",
      "params": [
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Graph>>"
            ]
          },
          "description": "- An array of graphs."
        }
      ],
      "name": "readGraphs",
      "longname": "readGraphs",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Search graphs.\r\n   * @param {Object} searchReq - Information about the search request.\r\n   * @param {string} searchReq.GraphGUID - Globally unique identifier for the graph (defaults to an empty GUID).\r\n   * @param {string} searchReq.Ordering - Ordering of the search results (default is CreatedDescending).\r\n   * @param {Object} searchReq.Expr - Expression used for the search (default is null).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<SearchResult>} - The search result.\r\n   */",
      "meta": {
        "range": [
          3686,
          4078
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 84,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000195",
          "name": "searchGraphs",
          "type": "MethodDefinition",
          "paramnames": [
            "searchReq",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Search graphs.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the search request.",
          "name": "searchReq"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier for the graph (defaults to an empty GUID).",
          "name": "searchReq.GraphGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Ordering of the search results (default is CreatedDescending).",
          "name": "searchReq.Ordering"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Expression used for the search (default is null).",
          "name": "searchReq.Expr"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<SearchResult>"
            ]
          },
          "description": "- The search result."
        }
      ],
      "name": "searchGraphs",
      "longname": "searchGraphs",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a specific graph.\r\n   * @param {string} guid - The GUID of the graph.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Graph>} - The requested graph.\r\n   */",
      "meta": {
        "range": [
          4343,
          4532
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 101,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000246",
          "name": "readGraph",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a specific graph.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Graph>"
            ]
          },
          "description": "- The requested graph."
        }
      ],
      "name": "readGraph",
      "longname": "readGraph",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a graph.\r\n   * @param {Object} graph - Information about the graph.\r\n   * @param {string} graph.GUID - Globally unique identifier (automatically generated if not provided).\r\n   * @param {string} graph.name - Name of the graph.\r\n   * @param {Date} graph.CreatedUtc - Creation timestamp in UTC (defaults to now).\r\n   * @param {Object} graph.data - Object data associated with the graph (default is null).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Graph>} - The updated graph.\r\n   */",
      "meta": {
        "range": [
          5130,
          5431
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 116,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000276",
          "name": "updateGraph",
          "type": "MethodDefinition",
          "paramnames": [
            "graph",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a graph.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the graph.",
          "name": "graph"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier (automatically generated if not provided).",
          "name": "graph.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the graph.",
          "name": "graph.name"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to now).",
          "name": "graph.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Object data associated with the graph (default is null).",
          "name": "graph.data"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Graph>"
            ]
          },
          "description": "- The updated graph."
        }
      ],
      "name": "updateGraph",
      "longname": "updateGraph",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a graph.\r\n   * @param {string} guid - The GUID of the graph.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @param {boolean} force - Force recursive deletion of edges and nodes.\r\n   */",
      "meta": {
        "range": [
          5710,
          5941
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 130,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000319",
          "name": "deleteGraph",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "force",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a graph.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Force recursive deletion of edges and nodes.",
          "name": "force"
        }
      ],
      "name": "deleteGraph",
      "longname": "deleteGraph",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Export a graph to GEXF format.\r\n   * @param {string} guid - The GUID of the graph.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<string>} - The GEXF XML data.\r\n   */",
      "meta": {
        "range": [
          6213,
          6527
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 142,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000357",
          "name": "exportGraphToGexf",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Export a graph to GEXF format.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          },
          "description": "- The GEXF XML data."
        }
      ],
      "name": "exportGraphToGexf",
      "longname": "exportGraphToGexf",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Execute a batch existence request.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {Object} existenceRequest - Optional initial data for the existence request.\r\n   * @param {string[]} existenceRequest.Nodes - Array of node GUIDs.\r\n   * @param {string[]} existenceRequest.Edges - Array of edge GUIDs.\r\n   * @param {EdgeBetween[]} existenceRequest.EdgesBetween - Array of EdgeBetween instances.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Object>} - The existence result.\r\n   */",
      "meta": {
        "range": [
          7168,
          7544
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 161,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000390",
          "name": "batchExistence",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "existenceRequest",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Execute a batch existence request.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Optional initial data for the existence request.",
          "name": "existenceRequest"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "Array of node GUIDs.",
          "name": "existenceRequest.Nodes"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "Array of edge GUIDs.",
          "name": "existenceRequest.Edges"
        },
        {
          "type": {
            "names": [
              "Array.<EdgeBetween>"
            ]
          },
          "description": "Array of EdgeBetween instances.",
          "name": "existenceRequest.EdgesBetween"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "- The existence result."
        }
      ],
      "name": "batchExistence",
      "longname": "batchExistence",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Check if a node exists by GUID.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {string} guid - The GUID of the node.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>} - True if the node exists.\r\n   */",
      "meta": {
        "range": [
          7925,
          8140
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 181,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000432",
          "name": "nodeExists",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Check if a node exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the node.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- True if the node exists."
        }
      ],
      "name": "nodeExists",
      "longname": "nodeExists",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create multiple nodes.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {Array<Object>} nodes - List of node objects.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Array<Object>>} - The list of created nodes.\r\n   */",
      "meta": {
        "range": [
          8483,
          8849
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 193,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000464",
          "name": "createNodes",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodes",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create multiple nodes.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "Array.<Object>"
            ]
          },
          "description": "List of node objects.",
          "name": "nodes"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Object>>"
            ]
          },
          "description": "- The list of created nodes."
        }
      ],
      "name": "createNodes",
      "longname": "createNodes",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create a node.\r\n   * @param {Object} node - Information about the node.\r\n   * @param {string} node.GUID - Globally unique identifier (automatically generated if not provided).\r\n   * @param {string} node.GraphGUID - Globally unique identifier for the graph (automatically generated if not provided).\r\n   * @param {string} node.name - Name of the node.\r\n   * @param {Object} node.data - Object data associated with the node (default is null).\r\n   * @param {Date} node.CreatedUtc - Creation timestamp in UTC (defaults to now).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Node>} - The created node.\r\n   */",
      "meta": {
        "range": [
          9559,
          9865
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 214,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000514",
          "name": "createNode",
          "type": "MethodDefinition",
          "paramnames": [
            "node",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a node.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the node.",
          "name": "node"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier (automatically generated if not provided).",
          "name": "node.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier for the graph (automatically generated if not provided).",
          "name": "node.GraphGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the node.",
          "name": "node.name"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Object data associated with the node (default is null).",
          "name": "node.data"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to now).",
          "name": "node.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Node>"
            ]
          },
          "description": "- The created node."
        }
      ],
      "name": "createNode",
      "longname": "createNode",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read nodes for a specific graph.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Node[]>} - An array of nodes.\r\n   */",
      "meta": {
        "range": [
          10144,
          10353
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 228,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000557",
          "name": "readNodes",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read nodes for a specific graph.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Node>>"
            ]
          },
          "description": "- An array of nodes."
        }
      ],
      "name": "readNodes",
      "longname": "readNodes",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Search nodes.\r\n   * @param {Object} searchReq - Information about the search request.\r\n   * @param {string} searchReq.GraphGUID - Globally unique identifier for the graph (defaults to an empty GUID).\r\n   * @param {string} searchReq.Ordering - Ordering of the search results (default is CreatedDescending).\r\n   * @param {Object} searchReq.Expr - Expression used for the search (default is null).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<SearchResult>} - The search result.\r\n   */",
      "meta": {
        "range": [
          10943,
          11362
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 242,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000587",
          "name": "searchNodes",
          "type": "MethodDefinition",
          "paramnames": [
            "searchReq",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Search nodes.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the search request.",
          "name": "searchReq"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier for the graph (defaults to an empty GUID).",
          "name": "searchReq.GraphGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Ordering of the search results (default is CreatedDescending).",
          "name": "searchReq.Ordering"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Expression used for the search (default is null).",
          "name": "searchReq.Expr"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<SearchResult>"
            ]
          },
          "description": "- The search result."
        }
      ],
      "name": "searchNodes",
      "longname": "searchNodes",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a specific node.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {string} nodeGuid - The GUID of the node.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Node>} - The requested node.\r\n   */",
      "meta": {
        "range": [
          11684,
          11910
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 259,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000642",
          "name": "readNode",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a specific node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the node.",
          "name": "nodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Node>"
            ]
          },
          "description": "- The requested node."
        }
      ],
      "name": "readNode",
      "longname": "readNode",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a node.\r\n   * @param {Object} node - Information about the node.\r\n   * @param {string} node.GUID - Globally unique identifier (automatically generated if not provided).\r\n   * @param {string} node.GraphGUID - Globally unique identifier for the graph (automatically generated if not provided).\r\n   * @param {string} node.name - Name of the node.\r\n   * @param {Object} node.data - Object data associated with the node (default is null).\r\n   * @param {Date} node.CreatedUtc - Creation timestamp in UTC (defaults to now).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Node>} - The updated node.\r\n   */",
      "meta": {
        "range": [
          12620,
          12939
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 275,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000675",
          "name": "updateNode",
          "type": "MethodDefinition",
          "paramnames": [
            "node",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a node.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the node.",
          "name": "node"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier (automatically generated if not provided).",
          "name": "node.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier for the graph (automatically generated if not provided).",
          "name": "node.GraphGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the node.",
          "name": "node.name"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Object data associated with the node (default is null).",
          "name": "node.data"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to now).",
          "name": "node.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Node>"
            ]
          },
          "description": "- The updated node."
        }
      ],
      "name": "updateNode",
      "longname": "updateNode",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a node.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {string} nodeGuid - The GUID of the node.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   */",
      "meta": {
        "range": [
          13201,
          13419
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 289,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000722",
          "name": "deleteNode",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the node.",
          "name": "nodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "name": "deleteNode",
      "longname": "deleteNode",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete all nodes within a graph.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   */",
      "meta": {
        "range": [
          13644,
          13845
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 299,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000754",
          "name": "deleteNodes",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete all nodes within a graph.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "name": "deleteNodes",
      "longname": "deleteNodes",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete multiple nodes within a graph.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {Array<string>} nodeGuids - The list of node GUIDs to delete.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   */",
      "meta": {
        "range": [
          14150,
          14530
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 310,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000783",
          "name": "deleteMultipleNodes",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuids",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete multiple nodes within a graph.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "The list of node GUIDs to delete.",
          "name": "nodeGuids"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "name": "deleteMultipleNodes",
      "longname": "deleteMultipleNodes",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Check if an edge exists by GUID.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} guid - Edge GUID.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>} - True if exists.\r\n   */",
      "meta": {
        "range": [
          14881,
          15096
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 330,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000832",
          "name": "edgeExists",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Check if an edge exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Edge GUID.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- True if exists."
        }
      ],
      "name": "edgeExists",
      "longname": "edgeExists",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create multiple edges.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {Array<Object>} edges - List of edge objects.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Array<Object>>} - The list of created edges.\r\n   */",
      "meta": {
        "range": [
          15439,
          15805
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 342,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000864",
          "name": "createEdges",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "edges",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create multiple edges.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "Array.<Object>"
            ]
          },
          "description": "List of edge objects.",
          "name": "edges"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Object>>"
            ]
          },
          "description": "- The list of created edges."
        }
      ],
      "name": "createEdges",
      "longname": "createEdges",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create an edge.\r\n   * @param {Object} edge - Information about the edge.\r\n   * @param {string} [edge.GUID] - Globally unique identifier for the edge (automatically generated if not provided).\r\n   * @param {string} [edge.GraphGUID] - Globally unique identifier for the graph (automatically generated if not provided).\r\n   * @param {string} [edge.Name] - Name of the edge.\r\n   * @param {string} [edge.From] - Globally unique identifier of the from node.\r\n   * @param {string} [edge.To] - Globally unique identifier of the to node.\r\n   * @param {number} [edge.Cost=0] - Cost associated with the edge (default is 0).\r\n   * @param {Date} [edge.CreatedUtc] - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {Object} [edge.Data] - Additional object data associated with the edge (default is null).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Edge>} - The created edge.\r\n   */",
      "meta": {
        "range": [
          16805,
          17111
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 366,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000914",
          "name": "createEdge",
          "type": "MethodDefinition",
          "paramnames": [
            "edge",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create an edge.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the edge.",
          "name": "edge"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Globally unique identifier for the edge (automatically generated if not provided).",
          "name": "edge.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Globally unique identifier for the graph (automatically generated if not provided).",
          "name": "edge.GraphGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the edge.",
          "name": "edge.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Globally unique identifier of the from node.",
          "name": "edge.From"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Globally unique identifier of the to node.",
          "name": "edge.To"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 0,
          "description": "Cost associated with the edge (default is 0).",
          "name": "edge.Cost"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "optional": true,
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "edge.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Additional object data associated with the edge (default is null).",
          "name": "edge.Data"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Edge>"
            ]
          },
          "description": "- The created edge."
        }
      ],
      "name": "createEdge",
      "longname": "createEdge",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read edges.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Edge[]>} - List of edges.\r\n   */",
      "meta": {
        "range": [
          17354,
          17563
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 380,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000957",
          "name": "readEdges",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read edges.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Edge>>"
            ]
          },
          "description": "- List of edges."
        }
      ],
      "name": "readEdges",
      "longname": "readEdges",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Search edges.\r\n   * @param {Object} searchReq - Information about the search request.\r\n   * @param {string} searchReq.GraphGUID - Globally unique identifier for the graph (defaults to an empty GUID).\r\n   * @param {string} searchReq.Ordering - Ordering of the search results (default is CreatedDescending).\r\n   * @param {Object} searchReq.Expr - Expression used for the search (default is null).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<SearchResult>} - The search result.\r\n   */",
      "meta": {
        "range": [
          18153,
          18573
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 394,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100000987",
          "name": "searchEdges",
          "type": "MethodDefinition",
          "paramnames": [
            "searchReq",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Search edges.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the search request.",
          "name": "searchReq"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally unique identifier for the graph (defaults to an empty GUID).",
          "name": "searchReq.GraphGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Ordering of the search results (default is CreatedDescending).",
          "name": "searchReq.Ordering"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Expression used for the search (default is null).",
          "name": "searchReq.Expr"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<SearchResult>"
            ]
          },
          "description": "- The search result."
        }
      ],
      "name": "searchEdges",
      "longname": "searchEdges",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read an edge.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} edgeGuid - Edge GUID.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Edge>} - The requested edge.\r\n   */",
      "meta": {
        "range": [
          18865,
          19091
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 414,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001042",
          "name": "readEdge",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "edgeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read an edge.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Edge GUID.",
          "name": "edgeGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Edge>"
            ]
          },
          "description": "- The requested edge."
        }
      ],
      "name": "readEdge",
      "longname": "readEdge",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update an edge.\r\n   * @param {Object} edge - Information about the edge.\r\n   * @param {string} [edge.GUID] - Globally unique identifier for the edge (automatically generated if not provided).\r\n   * @param {string} [edge.GraphGUID] - Globally unique identifier for the graph (automatically generated if not provided).\r\n   * @param {string} [edge.Name] - Name of the edge.\r\n   * @param {string} [edge.From] - Globally unique identifier of the from node.\r\n   * @param {string} [edge.To] - Globally unique identifier of the to node.\r\n   * @param {number} [edge.Cost=0] - Cost associated with the edge (default is 0).\r\n   * @param {Date} [edge.CreatedUtc] - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {Object} [edge.Data] - Additional object data associated with the edge (default is null).\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Edge>} - The updated edge.\r\n   */",
      "meta": {
        "range": [
          20091,
          20410
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 433,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001075",
          "name": "updateEdge",
          "type": "MethodDefinition",
          "paramnames": [
            "edge",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update an edge.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the edge.",
          "name": "edge"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Globally unique identifier for the edge (automatically generated if not provided).",
          "name": "edge.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Globally unique identifier for the graph (automatically generated if not provided).",
          "name": "edge.GraphGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the edge.",
          "name": "edge.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Globally unique identifier of the from node.",
          "name": "edge.From"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Globally unique identifier of the to node.",
          "name": "edge.To"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 0,
          "description": "Cost associated with the edge (default is 0).",
          "name": "edge.Cost"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "optional": true,
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "edge.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Additional object data associated with the edge (default is null).",
          "name": "edge.Data"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Edge>"
            ]
          },
          "description": "- The updated edge."
        }
      ],
      "name": "updateEdge",
      "longname": "updateEdge",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete an edge.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} edgeGuid - Edge GUID.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<void>} - Promise representing the completion of the deletion.\r\n   */",
      "meta": {
        "range": [
          20737,
          20955
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 448,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001122",
          "name": "deleteEdge",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "edgeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete an edge.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Edge GUID.",
          "name": "edgeGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "- Promise representing the completion of the deletion."
        }
      ],
      "name": "deleteEdge",
      "longname": "deleteEdge",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete all edges within a graph.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   */",
      "meta": {
        "range": [
          21180,
          21381
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 458,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001154",
          "name": "deleteEdges",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete all edges within a graph.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "name": "deleteEdges",
      "longname": "deleteEdges",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete multiple edges within a graph.\r\n   * @param {string} graphGuid - The GUID of the graph.\r\n   * @param {Array<string>} edgeGuids - The list of edge GUIDs to delete.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   */",
      "meta": {
        "range": [
          21686,
          22066
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 469,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001183",
          "name": "deleteMultipleEdges",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "edgeGuids",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete multiple edges within a graph.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "The list of edge GUIDs to delete.",
          "name": "edgeGuids"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "name": "deleteMultipleEdges",
      "longname": "deleteMultipleEdges",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Get edges from a node.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} nodeGuid - Node GUID.\r\n   * @param {AbortSignal} [cancellationToken] - Abort signal for cancellation.\r\n   * @returns {Promise<Edge[]>} - Edges.\r\n   */",
      "meta": {
        "range": [
          22380,
          22629
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 489,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001232",
          "name": "getEdgesFromNode",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get edges from a node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID.",
          "name": "nodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Abort signal for cancellation.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Edge>>"
            ]
          },
          "description": "- Edges."
        }
      ],
      "name": "getEdgesFromNode",
      "longname": "getEdgesFromNode",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Get edges to a node.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} nodeGuid - Node GUID.\r\n   * @param {AbortSignal} [cancellationToken] - Abort signal for cancellation.\r\n   * @returns {Promise<Edge[]>} - Edges.\r\n   */",
      "meta": {
        "range": [
          22888,
          23133
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 501,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001265",
          "name": "getEdgesToNode",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get edges to a node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID.",
          "name": "nodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Abort signal for cancellation.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Edge>>"
            ]
          },
          "description": "- Edges."
        }
      ],
      "name": "getEdgesToNode",
      "longname": "getEdgesToNode",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Get edges from a given node to a given node.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} fromNodeGuid - From node GUID.\r\n   * @param {string} toNodeGuid - To node GUID.\r\n   * @param {AbortSignal} [cancellationToken] - Abort signal for cancellation.\r\n   * @returns {Promise<Edge[]>} - Edges.\r\n   */",
      "meta": {
        "range": [
          23474,
          23761
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 514,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001298",
          "name": "getEdgesBetween",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "fromNodeGuid",
            "toNodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get edges from a given node to a given node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "From node GUID.",
          "name": "fromNodeGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "To node GUID.",
          "name": "toNodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Abort signal for cancellation.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Edge>>"
            ]
          },
          "description": "- Edges."
        }
      ],
      "name": "getEdgesBetween",
      "longname": "getEdgesBetween",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Get all edges to or from a node.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} nodeGuid - Node GUID.\r\n   * @param {AbortSignal} [cancellationToken] - Abort signal for cancellation.\r\n   * @returns {Promise<Edge[]>} - Edges.\r\n   */",
      "meta": {
        "range": [
          24032,
          24275
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 526,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001334",
          "name": "getAllNodeEdges",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get all edges to or from a node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID.",
          "name": "nodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Abort signal for cancellation.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Edge>>"
            ]
          },
          "description": "- Edges."
        }
      ],
      "name": "getAllNodeEdges",
      "longname": "getAllNodeEdges",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Get child nodes from a node.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} nodeGuid - Node GUID.\r\n   * @param {AbortSignal} [cancellationToken] - Abort signal for cancellation.\r\n   * @returns {Promise<Node[]>} - Child nodes.\r\n   */",
      "meta": {
        "range": [
          24548,
          24798
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 538,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001367",
          "name": "getChildrenFromNode",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get child nodes from a node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID.",
          "name": "nodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Abort signal for cancellation.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Node>>"
            ]
          },
          "description": "- Child nodes."
        }
      ],
      "name": "getChildrenFromNode",
      "longname": "getChildrenFromNode",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Get parent nodes from a node.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} nodeGuid - Node GUID.\r\n   * @param {AbortSignal} [cancellationToken] - Abort signal for cancellation.\r\n   * @returns {Promise<Node[]>} - Parent nodes.\r\n   */",
      "meta": {
        "range": [
          25073,
          25321
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 550,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001400",
          "name": "getParentsFromNode",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get parent nodes from a node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID.",
          "name": "nodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Abort signal for cancellation.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Node>>"
            ]
          },
          "description": "- Parent nodes."
        }
      ],
      "name": "getParentsFromNode",
      "longname": "getParentsFromNode",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Get neighboring nodes from a node.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} nodeGuid - Node GUID.\r\n   * @param {AbortSignal} [cancellationToken] - Abort signal for cancellation.\r\n   * @returns {Promise<Node[]>} - Neighboring nodes.\r\n   */",
      "meta": {
        "range": [
          25606,
          25854
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 562,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001433",
          "name": "getNodeNeighbors",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "nodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get neighboring nodes from a node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID.",
          "name": "nodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Abort signal for cancellation.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Node>>"
            ]
          },
          "description": "- Neighboring nodes."
        }
      ],
      "name": "getNodeNeighbors",
      "longname": "getNodeNeighbors",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Get routes between two nodes.\r\n   * @param {string} graphGuid - Graph GUID.\r\n   * @param {string} fromNodeGuid - From node GUID.\r\n   * @param {string} toNodeGuid - To node GUID.\r\n   * @param {AbortSignal} [cancellationToken] - Abort signal for cancellation.\r\n   * @returns {Promise<RouteResult>} - Routes.\r\n   */",
      "meta": {
        "range": [
          26186,
          26583
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 575,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001466",
          "name": "getRoutes",
          "type": "MethodDefinition",
          "paramnames": [
            "graphGuid",
            "fromNodeGuid",
            "toNodeGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get routes between two nodes.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph GUID.",
          "name": "graphGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "From node GUID.",
          "name": "fromNodeGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "To node GUID.",
          "name": "toNodeGuid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Abort signal for cancellation.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<RouteResult>"
            ]
          },
          "description": "- Routes."
        }
      ],
      "name": "getRoutes",
      "longname": "getRoutes",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read all tenants.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<TenantMetaData[]>} - An array of tenants.\r\n   */",
      "meta": {
        "range": [
          26842,
          27007
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 596,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001517",
          "name": "readTenants",
          "type": "MethodDefinition",
          "paramnames": [
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read all tenants.",
      "params": [
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<TenantMetaData>>"
            ]
          },
          "description": "- An array of tenants."
        }
      ],
      "name": "readTenants",
      "longname": "readTenants",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a tenant.\r\n   * @param {string} tenantGuid - The GUID of the tenant.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<TenantMetaData>} - The tenant.\r\n   */",
      "meta": {
        "range": [
          27271,
          27557
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 607,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001540",
          "name": "readTenant",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a tenant.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TenantMetaData>"
            ]
          },
          "description": "- The tenant."
        }
      ],
      "name": "readTenant",
      "longname": "readTenant",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create a tenant.\r\n   * @param {TenantMetaData} tenant - The tenant to create.\r\n   * @param {String} tenant.name - The name of the tenant.\r\n   * @param {boolean} tenant.Active - Indicates if tenant is active.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<TenantMetaData>} - The created tenant.\r\n   */",
      "meta": {
        "range": [
          27963,
          28239
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 623,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001576",
          "name": "createTenant",
          "type": "MethodDefinition",
          "paramnames": [
            "tenant",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a tenant.",
      "params": [
        {
          "type": {
            "names": [
              "TenantMetaData"
            ]
          },
          "description": "The tenant to create.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the tenant.",
          "name": "tenant.name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if tenant is active.",
          "name": "tenant.Active"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TenantMetaData>"
            ]
          },
          "description": "- The created tenant."
        }
      ],
      "name": "createTenant",
      "longname": "createTenant",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a tenant.\r\n   * @param {TenantMetaData} tenant - The tenant to update.\r\n   * @param {String} tenant.name - The name of the tenant.\r\n   * @param {boolean} tenant.Active - Indicates if tenant is active.\r\n   * @param {string} guid - The GUID of the tenant.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<TenantMetaData>} - The updated tenant.\r\n   */",
      "meta": {
        "range": [
          28698,
          29076
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 640,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001611",
          "name": "updateTenant",
          "type": "MethodDefinition",
          "paramnames": [
            "tenant",
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a tenant.",
      "params": [
        {
          "type": {
            "names": [
              "TenantMetaData"
            ]
          },
          "description": "The tenant to update.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the tenant.",
          "name": "tenant.name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if tenant is active.",
          "name": "tenant.Active"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TenantMetaData>"
            ]
          },
          "description": "- The updated tenant."
        }
      ],
      "name": "updateTenant",
      "longname": "updateTenant",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a tenant.\r\n   * @param {string} tenantGuid - The GUID of the tenant.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Boolean>}\r\n   */",
      "meta": {
        "range": [
          29321,
          29496
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 657,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001659",
          "name": "deleteTenant",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a tenant.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Boolean>"
            ]
          }
        }
      ],
      "name": "deleteTenant",
      "longname": "deleteTenant",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Tenant exists.\r\n   * @param {string} tenantGuid - The GUID of the tenant.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>}\r\n   */",
      "meta": {
        "range": [
          29739,
          29912
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 668,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001684",
          "name": "tenantExists",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Tenant exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "tenantExists",
      "longname": "tenantExists",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Tenant delete force.\r\n   * @param {string} tenantGuid - The GUID of the tenant.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Boolean>}\r\n   */",
      "meta": {
        "range": [
          30161,
          30447
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 679,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001709",
          "name": "tenantDeleteForce",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Tenant delete force.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Boolean>"
            ]
          }
        }
      ],
      "name": "tenantDeleteForce",
      "longname": "tenantDeleteForce",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read all users.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<UserMetadata[]>} - An array of users.\r\n   */",
      "meta": {
        "range": [
          30698,
          30887
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 696,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001744",
          "name": "readAllUsers",
          "type": "MethodDefinition",
          "paramnames": [
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read all users.",
      "params": [
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<UserMetadata>>"
            ]
          },
          "description": "- An array of users."
        }
      ],
      "name": "readAllUsers",
      "longname": "readAllUsers",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a user.\r\n   * @param {string} userGuid - The GUID of the user.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<UserMetadata>} - The user.\r\n   */",
      "meta": {
        "range": [
          31141,
          31344
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 707,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001771",
          "name": "readUser",
          "type": "MethodDefinition",
          "paramnames": [
            "userGuid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a user.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the user.",
          "name": "userGuid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<UserMetadata>"
            ]
          },
          "description": "- The user."
        }
      ],
      "name": "readUser",
      "longname": "readUser",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create a user.\r\n   * @param {UserMetadata} user - The user to create.\r\n   * @param {String} user.FirstName - The first name of the user.\r\n   * @param {String} user.LastName - The last name of the user.\r\n   * @param {boolean} user.Active - Indicates if user is active.\r\n   * @param {string} user.Email - The email of the user.\r\n   * @param {string} user.Password - The password of the user.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<UserMetadata>} - The created user.\r\n   */",
      "meta": {
        "range": [
          31928,
          32217
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 723,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001801",
          "name": "createUser",
          "type": "MethodDefinition",
          "paramnames": [
            "user",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a user.",
      "params": [
        {
          "type": {
            "names": [
              "UserMetadata"
            ]
          },
          "description": "The user to create.",
          "name": "user"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The first name of the user.",
          "name": "user.FirstName"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The last name of the user.",
          "name": "user.LastName"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if user is active.",
          "name": "user.Active"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The email of the user.",
          "name": "user.Email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The password of the user.",
          "name": "user.Password"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<UserMetadata>"
            ]
          },
          "description": "- The created user."
        }
      ],
      "name": "createUser",
      "longname": "createUser",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * User exists.\r\n   * @param {string} guid - The GUID of the user.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>}\r\n   */",
      "meta": {
        "range": [
          32450,
          32722
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 737,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001840",
          "name": "existsUser",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "User exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the user.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "existsUser",
      "longname": "existsUser",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a user.\r\n   * @param {UserMetadata} user - The user to update.\r\n   * @param {String} user.FirstName - The first name of the user.\r\n   * @param {String} user.LastName - The last name of the user.\r\n   * @param {boolean} user.Active - Indicates if user is active.\r\n   * @param {string} user.Email - The email of the user.\r\n   * @param {string} user.Password - The password of the user.\r\n   * @param {string} guid - The GUID of the user.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<UserMetadata>} - The updated user.\r\n   */",
      "meta": {
        "range": [
          33357,
          33748
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 757,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001879",
          "name": "updateUser",
          "type": "MethodDefinition",
          "paramnames": [
            "user",
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a user.",
      "params": [
        {
          "type": {
            "names": [
              "UserMetadata"
            ]
          },
          "description": "The user to update.",
          "name": "user"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The first name of the user.",
          "name": "user.FirstName"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The last name of the user.",
          "name": "user.LastName"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if user is active.",
          "name": "user.Active"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The email of the user.",
          "name": "user.Email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The password of the user.",
          "name": "user.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the user.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<UserMetadata>"
            ]
          },
          "description": "- The updated user."
        }
      ],
      "name": "updateUser",
      "longname": "updateUser",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a user.\r\n   * @param {string} guid - The GUID of the user.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Boolean>}\r\n   */",
      "meta": {
        "range": [
          33983,
          34169
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 774,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001931",
          "name": "deleteUser",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a user.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the user.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Boolean>"
            ]
          }
        }
      ],
      "name": "deleteUser",
      "longname": "deleteUser",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read all credentials.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<CredentialMetadata[]>} - An array of credentials.\r\n   */",
      "meta": {
        "range": [
          34442,
          34649
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 787,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001960",
          "name": "readAllCredentials",
          "type": "MethodDefinition",
          "paramnames": [
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read all credentials.",
      "params": [
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<CredentialMetadata>>"
            ]
          },
          "description": "- An array of credentials."
        }
      ],
      "name": "readAllCredentials",
      "longname": "readAllCredentials",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a credential.\r\n   * @param {string} guid - The GUID of the credential.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<CredentialMetadata>} - The credential.\r\n   */",
      "meta": {
        "range": [
          34923,
          35224
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 798,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100001987",
          "name": "readCredential",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a credential.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the credential.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<CredentialMetadata>"
            ]
          },
          "description": "- The credential."
        }
      ],
      "name": "readCredential",
      "longname": "readCredential",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create a credential.\r\n   * @param {CredentialMetadata} credential - The credential to create.\r\n   * @param {string} credential.Name - The name of the credential.\r\n   * @param {string} credential.BearerToken - The bearer token of the credential.\r\n   * @param {boolean} credential.Active - Indicates if credential is active.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<CredentialMetadata>} - The created credential.\r\n   */",
      "meta": {
        "range": [
          35753,
          36084
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 815,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002027",
          "name": "createCredential",
          "type": "MethodDefinition",
          "paramnames": [
            "credential",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a credential.",
      "params": [
        {
          "type": {
            "names": [
              "CredentialMetadata"
            ]
          },
          "description": "The credential to create.",
          "name": "credential"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the credential.",
          "name": "credential.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bearer token of the credential.",
          "name": "credential.BearerToken"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if credential is active.",
          "name": "credential.Active"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<CredentialMetadata>"
            ]
          },
          "description": "- The created credential."
        }
      ],
      "name": "createCredential",
      "longname": "createCredential",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a credential.\r\n   * @param {CredentialMetadata} credential - The credential to update.\r\n   * @param {string} credential.Name - The name of the credential.\r\n   * @param {string} credential.BearerToken - The bearer token of the credential.\r\n   * @param {boolean} credential.Active - Indicates if credential is active.\r\n   * @param {string} guid - The GUID of the credential.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<CredentialMetadata>} - The updated credential.\r\n   */",
      "meta": {
        "range": [
          36670,
          37103
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 833,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002066",
          "name": "updateCredential",
          "type": "MethodDefinition",
          "paramnames": [
            "credential",
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a credential.",
      "params": [
        {
          "type": {
            "names": [
              "CredentialMetadata"
            ]
          },
          "description": "The credential to update.",
          "name": "credential"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the credential.",
          "name": "credential.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bearer token of the credential.",
          "name": "credential.BearerToken"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if credential is active.",
          "name": "credential.Active"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the credential.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<CredentialMetadata>"
            ]
          },
          "description": "- The updated credential."
        }
      ],
      "name": "updateCredential",
      "longname": "updateCredential",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a credential.\r\n   * @param {string} guid - The GUID of the credential.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Boolean>}\r\n   */",
      "meta": {
        "range": [
          37350,
          37636
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 850,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002118",
          "name": "deleteCredential",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a credential.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the credential.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Boolean>"
            ]
          }
        }
      ],
      "name": "deleteCredential",
      "longname": "deleteCredential",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Credential exists.\r\n   * @param {string} guid - The GUID of the credential.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>}\r\n   */",
      "meta": {
        "range": [
          37881,
          38165
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 864,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002157",
          "name": "existsCredential",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Credential exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the credential.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "existsCredential",
      "longname": "existsCredential",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read all tags.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<TagMetaData[]>}\r\n   */",
      "meta": {
        "range": [
          38397,
          38583
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 880,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002196",
          "name": "readAllTags",
          "type": "MethodDefinition",
          "paramnames": [
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read all tags.",
      "params": [
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<TagMetaData>>"
            ]
          }
        }
      ],
      "name": "readAllTags",
      "longname": "readAllTags",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a tag.\r\n   * @param {string} guid - The GUID of the tag.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<TagMetaData>}\r\n   */",
      "meta": {
        "range": [
          38818,
          39098
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 891,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002223",
          "name": "readTag",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a tag.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tag.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TagMetaData>"
            ]
          }
        }
      ],
      "name": "readTag",
      "longname": "readTag",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Tag exists.\r\n   * @param {string} guid - The GUID of the tag.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>}\r\n   */",
      "meta": {
        "range": [
          39329,
          39599
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 905,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002263",
          "name": "existsTag",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Tag exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tag.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "existsTag",
      "longname": "existsTag",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create a tag.\r\n   * @param {TagMetaData} tag - The tag to create.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<TagMetaData>}\r\n   */",
      "meta": {
        "range": [
          39838,
          40120
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 919,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002302",
          "name": "createTag",
          "type": "MethodDefinition",
          "paramnames": [
            "tag",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a tag.",
      "params": [
        {
          "type": {
            "names": [
              "TagMetaData"
            ]
          },
          "description": "The tag to create.",
          "name": "tag"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TagMetaData>"
            ]
          }
        }
      ],
      "name": "createTag",
      "longname": "createTag",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a tag.\r\n   * @param {TagMetaData} tag - The tag to update.\r\n   * @param {string} guid - The GUID of the tag.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<TagMetaData>}\r\n   */",
      "meta": {
        "range": [
          40409,
          40793
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 934,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002341",
          "name": "updateTag",
          "type": "MethodDefinition",
          "paramnames": [
            "tag",
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a tag.",
      "params": [
        {
          "type": {
            "names": [
              "TagMetaData"
            ]
          },
          "description": "The tag to update.",
          "name": "tag"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tag.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TagMetaData>"
            ]
          }
        }
      ],
      "name": "updateTag",
      "longname": "updateTag",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a tag.\r\n   * @param {string} guid - The GUID of the tag.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<void>}\r\n   */",
      "meta": {
        "range": [
          41023,
          41295
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 951,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002393",
          "name": "deleteTag",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a tag.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tag.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "name": "deleteTag",
      "longname": "deleteTag",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read all labels.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<LabelMetadata[]>}\r\n   */",
      "meta": {
        "range": [
          41528,
          41720
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 968,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002432",
          "name": "readAllLabels",
          "type": "MethodDefinition",
          "paramnames": [
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read all labels.",
      "params": [
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<LabelMetadata>>"
            ]
          }
        }
      ],
      "name": "readAllLabels",
      "longname": "readAllLabels",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a label.\r\n   * @param {string} guid - The GUID of the label.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<LabelMetadata>}\r\n   */",
      "meta": {
        "range": [
          41961,
          42247
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 979,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002459",
          "name": "readLabel",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a label.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the label.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<LabelMetadata>"
            ]
          }
        }
      ],
      "name": "readLabel",
      "longname": "readLabel",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Label exists.\r\n   * @param {string} guid - The GUID of the label.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>}\r\n   */",
      "meta": {
        "range": [
          42482,
          42756
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 993,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002499",
          "name": "existsLabel",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Label exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the label.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "existsLabel",
      "longname": "existsLabel",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create a label.\r\n   * @param {LabelMetadata} label - The label to create.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<LabelMetadata>}\r\n   */",
      "meta": {
        "range": [
          43005,
          43301
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1007,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002538",
          "name": "createLabel",
          "type": "MethodDefinition",
          "paramnames": [
            "label",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a label.",
      "params": [
        {
          "type": {
            "names": [
              "LabelMetadata"
            ]
          },
          "description": "The label to create.",
          "name": "label"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<LabelMetadata>"
            ]
          }
        }
      ],
      "name": "createLabel",
      "longname": "createLabel",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a label.\r\n   * @param {LabelMetadata} label - The label to update.\r\n   * @param {string} guid - The GUID of the label.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<LabelMetadata>}\r\n   */",
      "meta": {
        "range": [
          43602,
          44000
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1022,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002577",
          "name": "updateLabel",
          "type": "MethodDefinition",
          "paramnames": [
            "label",
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a label.",
      "params": [
        {
          "type": {
            "names": [
              "LabelMetadata"
            ]
          },
          "description": "The label to update.",
          "name": "label"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the label.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<LabelMetadata>"
            ]
          }
        }
      ],
      "name": "updateLabel",
      "longname": "updateLabel",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a label.\r\n   * @param {string} guid - The GUID of the label.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<void>}\r\n   */",
      "meta": {
        "range": [
          44234,
          44510
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1039,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002629",
          "name": "deleteLabel",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a label.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the label.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "name": "deleteLabel",
      "longname": "deleteLabel",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read all vectors.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<VectorMetadata[]>}\r\n   */",
      "meta": {
        "range": [
          44746,
          44941
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1056,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002668",
          "name": "readAllVectors",
          "type": "MethodDefinition",
          "paramnames": [
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read all vectors.",
      "params": [
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<VectorMetadata>>"
            ]
          }
        }
      ],
      "name": "readAllVectors",
      "longname": "readAllVectors",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a vector.\r\n   * @param {string} guid - The GUID of the vector.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<VectorMetadata>}\r\n   */",
      "meta": {
        "range": [
          45185,
          45386
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1067,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002695",
          "name": "readVector",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a vector.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the vector.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<VectorMetadata>"
            ]
          }
        }
      ],
      "name": "readVector",
      "longname": "readVector",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Vector exists.\r\n   * @param {string} guid - The GUID of the vector.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<boolean>}\r\n   */",
      "meta": {
        "range": [
          45623,
          45899
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1078,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002725",
          "name": "existsVector",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Vector exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the vector.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "existsVector",
      "longname": "existsVector",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Create a vector.\r\n   * @param {VectorMetadata} vector - The vector to create.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<VectorMetadata>}\r\n   */",
      "meta": {
        "range": [
          46153,
          46456
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1092,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002764",
          "name": "createVector",
          "type": "MethodDefinition",
          "paramnames": [
            "vector",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a vector.",
      "params": [
        {
          "type": {
            "names": [
              "VectorMetadata"
            ]
          },
          "description": "The vector to create.",
          "name": "vector"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<VectorMetadata>"
            ]
          }
        }
      ],
      "name": "createVector",
      "longname": "createVector",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a vector.\r\n   * @param {VectorMetadata} vector - The vector to update.\r\n   * @param {string} guid - The GUID of the vector.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<VectorMetadata>}\r\n   */",
      "meta": {
        "range": [
          46763,
          47168
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1107,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002803",
          "name": "updateVector",
          "type": "MethodDefinition",
          "paramnames": [
            "vector",
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a vector.",
      "params": [
        {
          "type": {
            "names": [
              "VectorMetadata"
            ]
          },
          "description": "The vector to update.",
          "name": "vector"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the vector.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<VectorMetadata>"
            ]
          }
        }
      ],
      "name": "updateVector",
      "longname": "updateVector",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a vector.\r\n   * @param {string} guid - The GUID of the vector.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<void>}\r\n   */",
      "meta": {
        "range": [
          47404,
          47682
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1124,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002855",
          "name": "deleteVector",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a vector.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the vector.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "name": "deleteVector",
      "longname": "deleteVector",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Generate an authentication token.\r\n   * @param {string} email - The user's email address.\r\n   * @param {string} tenantId - The tenant ID.\r\n   * @param {string} password - The user's password.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Token>} The generated authentication token\r\n   */",
      "meta": {
        "range": [
          48123,
          48718
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1144,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002894",
          "name": "generateToken",
          "type": "MethodDefinition",
          "paramnames": [
            "email",
            "password",
            "tenantId",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Generate an authentication token.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The user's email address.",
          "name": "email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant ID.",
          "name": "tenantId"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The user's password.",
          "name": "password"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Token>"
            ]
          },
          "description": "The generated authentication token"
        }
      ],
      "name": "generateToken",
      "longname": "generateToken",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Fetch details about an authentication token.\r\n   * @param {string} token - The authentication token to inspect.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @returns {Promise<Object>} The token details\r\n   */",
      "meta": {
        "range": [
          49016,
          49344
        ],
        "filename": "LiteGraphSdk.js",
        "lineno": 1171,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100002961",
          "name": "getTokenDetails",
          "type": "MethodDefinition",
          "paramnames": [
            "token",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetch details about an authentication token.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The authentication token to inspect.",
          "name": "token"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "The token details"
        }
      ],
      "name": "getTokenDetails",
      "longname": "getTokenDetails",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n * SDK Base class for making API calls with logging and timeout functionality.\r\n */",
      "meta": {
        "range": [
          426,
          25962
        ],
        "filename": "SdkBase.js",
        "lineno": 11,
        "columnno": 15,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003029",
          "name": "module.exports",
          "type": "ClassDeclaration",
          "paramnames": [
            "endpoint",
            "tenantGuid",
            "accessKey"
          ]
        }
      },
      "name": "exports",
      "longname": "module.exports",
      "kind": "class",
      "classdesc": "SDK Base class for making API calls with logging and timeout functionality.",
      "memberof": "module",
      "scope": "static",
      "description": "Creates an instance of SdkBase.",
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Throws an error if the endpoint is null or empty."
        }
      ],
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The API endpoint base URL.",
          "name": "endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "The tenant GUID.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "The access key.",
          "name": "accessKey"
        }
      ]
    },
    {
      "comment": "/**\r\n   * Getter for the tenant GUID.\r\n   * @return {string} The tenant GUID.\r\n   */",
      "meta": {
        "range": [
          1398,
          1557
        ],
        "filename": "SdkBase.js",
        "lineno": 44,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003115",
          "name": "tenantGuid",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Getter for the tenant GUID.",
      "returns": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant GUID."
        }
      ],
      "name": "tenantGuid",
      "longname": "tenantGuid",
      "kind": "member",
      "scope": "global",
      "params": []
    },
    {
      "comment": "/**\r\n   * Setter for the tenant GUID.\r\n   * @param {string} value - The tenant GUID.\r\n   * @throws {Error} Throws an error if the tenant GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          1733,
          1887
        ],
        "filename": "SdkBase.js",
        "lineno": 56,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003135",
          "name": "tenantGuid",
          "type": "MethodDefinition",
          "paramnames": [
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Setter for the tenant GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant GUID.",
          "name": "value"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Throws an error if the tenant GUID is null or empty."
        }
      ],
      "name": "tenantGuid",
      "longname": "tenantGuid",
      "kind": "member",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Getter for the access key.\r\n   * @return {string} The access key.\r\n   */",
      "meta": {
        "range": [
          1979,
          2030
        ],
        "filename": "SdkBase.js",
        "lineno": 67,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003156",
          "name": "accessKey",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Getter for the access key.",
      "returns": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The access key."
        }
      ],
      "name": "accessKey",
      "longname": "accessKey",
      "kind": "member",
      "scope": "global",
      "params": []
    },
    {
      "comment": "/**\r\n   * Setter for the access key.\r\n   * @param {string} value - The access key.\r\n   * @throws {Error} Throws an error if the access key is null or empty.\r\n   */",
      "meta": {
        "range": [
          2203,
          2463
        ],
        "filename": "SdkBase.js",
        "lineno": 76,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003164",
          "name": "accessKey",
          "type": "MethodDefinition",
          "paramnames": [
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Setter for the access key.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The access key.",
          "name": "value"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Throws an error if the access key is null or empty."
        }
      ],
      "name": "accessKey",
      "longname": "accessKey",
      "kind": "member",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Getter for the access token.\r\n   * @return {string} The access token.\r\n   */",
      "meta": {
        "range": [
          2557,
          2612
        ],
        "filename": "SdkBase.js",
        "lineno": 90,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003200",
          "name": "accessToken",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Getter for the access token.",
      "returns": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The access token."
        }
      ],
      "name": "accessToken",
      "longname": "accessToken",
      "kind": "member",
      "scope": "global",
      "params": []
    },
    {
      "comment": "/**\r\n   * Setter for the access token.\r\n   * @param {string} value - The access token.\r\n   * @throws {Error} Throws an error if the access token is null or empty.\r\n   */",
      "meta": {
        "range": [
          2791,
          3043
        ],
        "filename": "SdkBase.js",
        "lineno": 99,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003208",
          "name": "accessToken",
          "type": "MethodDefinition",
          "paramnames": [
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Setter for the access token.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The access token.",
          "name": "value"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Throws an error if the access token is null or empty."
        }
      ],
      "name": "accessToken",
      "longname": "accessToken",
      "kind": "member",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Getter for the request header prefix.\r\n   * @return {string} The header prefix.\r\n   */",
      "meta": {
        "range": [
          3149,
          3194
        ],
        "filename": "SdkBase.js",
        "lineno": 115,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003241",
          "name": "header",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Getter for the request header prefix.",
      "returns": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The header prefix."
        }
      ],
      "name": "header",
      "longname": "header",
      "kind": "member",
      "scope": "global",
      "params": []
    },
    {
      "comment": "/**\r\n   * Setter for the request header prefix.\r\n   * @param {string} value - The header prefix.\r\n   */",
      "meta": {
        "range": [
          3307,
          3494
        ],
        "filename": "SdkBase.js",
        "lineno": 123,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003249",
          "name": "header",
          "type": "MethodDefinition",
          "paramnames": [
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Setter for the request header prefix.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The header prefix.",
          "name": "value"
        }
      ],
      "name": "header",
      "longname": "header",
      "kind": "member",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Getter for the API endpoint.\r\n   * @return {string} The endpoint URL.\r\n   */",
      "meta": {
        "range": [
          3590,
          3639
        ],
        "filename": "SdkBase.js",
        "lineno": 135,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003285",
          "name": "endpoint",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Getter for the API endpoint.",
      "returns": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The endpoint URL."
        }
      ],
      "name": "endpoint",
      "longname": "endpoint",
      "kind": "member",
      "scope": "global",
      "params": []
    },
    {
      "comment": "/**\r\n   * Setter for the API endpoint.\r\n   * @param {string} value - The endpoint URL.\r\n   * @throws {Error} Throws an error if the endpoint is null or empty.\r\n   */",
      "meta": {
        "range": [
          3814,
          3998
        ],
        "filename": "SdkBase.js",
        "lineno": 144,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003293",
          "name": "endpoint",
          "type": "MethodDefinition",
          "paramnames": [
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Setter for the API endpoint.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The endpoint URL.",
          "name": "value"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Throws an error if the endpoint is null or empty."
        }
      ],
      "name": "endpoint",
      "longname": "endpoint",
      "kind": "member",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Getter for the timeout in milliseconds.\r\n   * @return {number} The timeout in milliseconds.\r\n   */",
      "meta": {
        "range": [
          4116,
          4167
        ],
        "filename": "SdkBase.js",
        "lineno": 155,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003323",
          "name": "timeoutMs",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Getter for the timeout in milliseconds.",
      "returns": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The timeout in milliseconds."
        }
      ],
      "name": "timeoutMs",
      "longname": "timeoutMs",
      "kind": "member",
      "scope": "global",
      "params": []
    },
    {
      "comment": "/**\r\n   * Setter for the timeout in milliseconds.\r\n   * @param {number} value - Timeout value in milliseconds.\r\n   * @throws {Error} Throws an error if the timeout is less than 1.\r\n   */",
      "meta": {
        "range": [
          4363,
          4536
        ],
        "filename": "SdkBase.js",
        "lineno": 164,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003331",
          "name": "timeoutMs",
          "type": "MethodDefinition",
          "paramnames": [
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Setter for the timeout in milliseconds.",
      "params": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Timeout value in milliseconds.",
          "name": "value"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Throws an error if the timeout is less than 1."
        }
      ],
      "name": "timeoutMs",
      "longname": "timeoutMs",
      "kind": "member",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Logs a message with a severity level.\r\n   * @param {string} sev - The severity level (e.g., SeverityEnum.Debug, 'warn').\r\n   * @param {string} msg - The message to log.\r\n   */",
      "meta": {
        "range": [
          4731,
          4834
        ],
        "filename": "SdkBase.js",
        "lineno": 176,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003353",
          "name": "log",
          "type": "MethodDefinition",
          "paramnames": [
            "sev",
            "msg"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Logs a message with a severity level.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The severity level (e.g., SeverityEnum.Debug, 'warn').",
          "name": "sev"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The message to log.",
          "name": "msg"
        }
      ],
      "name": "log",
      "longname": "log",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Validates API connectivity using a HEAD request.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<boolean>} Resolves to true if the connection is successful.\r\n   * @throws {Error} Rejects with the error in case of failure.\r\n   */",
      "meta": {
        "range": [
          5166,
          6359
        ],
        "filename": "SdkBase.js",
        "lineno": 187,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003378",
          "name": "validateConnectivity",
          "type": "MethodDefinition",
          "paramnames": [
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Validates API connectivity using a HEAD request.",
      "params": [
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Resolves to true if the connection is successful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects with the error in case of failure."
        }
      ],
      "name": "validateConnectivity",
      "longname": "validateConnectivity",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Sends a PUT request to create an object at a given URL.\r\n   * @param {string} url - The URL where the object is created.\r\n   * @param {Object} obj - The object to be created.\r\n   * @param {Class} model - Modal to deserialize on\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<Object>} Resolves with the created object.\r\n   * @throws {Error} Rejects if the URL or object is invalid or if the request fails.\r\n   */",
      "meta": {
        "range": [
          6875,
          8373
        ],
        "filename": "SdkBase.js",
        "lineno": 228,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003520",
          "name": "putCreate",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "obj",
            "model",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sends a PUT request to create an object at a given URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL where the object is created.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object to be created.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "Resolves with the created object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL or object is invalid or if the request fails."
        }
      ],
      "name": "putCreate",
      "longname": "putCreate",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Checks if an object exists at a given URL using a HEAD request.\r\n   * @param {string} url - The URL to check.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<boolean>} Resolves to true if the object exists.\r\n   * @throws {Error} Rejects if the URL is invalid or if the request fails.\r\n   */",
      "meta": {
        "range": [
          8767,
          10043
        ],
        "filename": "SdkBase.js",
        "lineno": 275,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003703",
          "name": "head",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Checks if an object exists at a given URL using a HEAD request.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to check.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Resolves to true if the object exists."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL is invalid or if the request fails."
        }
      ],
      "name": "head",
      "longname": "head",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Retrieves an object from a given URL using a GET request.\r\n   * @param {string} url - The URL of the object.\r\n   * @param {Class} model - Modal to deserialize on\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @param {Object} [headers] - Additional headers.\r\n   * @return {Promise<Object>} Resolves with the retrieved object.\r\n   * @throws {Error} Rejects if the URL is invalid or if the request fails.\r\n   */",
      "meta": {
        "range": [
          10539,
          11923
        ],
        "filename": "SdkBase.js",
        "lineno": 318,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100003861",
          "name": "get",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "model",
            "cancellationToken",
            "headers"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieves an object from a given URL using a GET request.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL of the object.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Additional headers.",
          "name": "headers"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "Resolves with the retrieved object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL is invalid or if the request fails."
        }
      ],
      "name": "get",
      "longname": "get",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Retrieves raw data from a given URL using a GET request.\r\n   * @param {string} url - The URL of the object.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<Object>} Resolves with the retrieved data.\r\n   * @throws {Error} Rejects if the URL is invalid or if the request fails.\r\n   */",
      "meta": {
        "range": [
          12309,
          13646
        ],
        "filename": "SdkBase.js",
        "lineno": 362,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100004032",
          "name": "getDataInBytes",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieves raw data from a given URL using a GET request.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL of the object.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "Resolves with the retrieved data."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL is invalid or if the request fails."
        }
      ],
      "name": "getDataInBytes",
      "longname": "getDataInBytes",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Retrieves a list of objects from a given URL using a GET request.\r\n   * @param {string} url - The URL of the objects.\r\n   * @param {Class} model - Modal to deserialize on\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<Array>} Resolves with the list of retrieved objects.\r\n   * @throws {Error} Rejects if the URL is invalid or if the request fails.\r\n   */",
      "meta": {
        "range": [
          14105,
          15427
        ],
        "filename": "SdkBase.js",
        "lineno": 404,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100004201",
          "name": "getMany",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "model",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieves a list of objects from a given URL using a GET request.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL of the objects.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array>"
            ]
          },
          "description": "Resolves with the list of retrieved objects."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL is invalid or if the request fails."
        }
      ],
      "name": "getMany",
      "longname": "getMany",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Sends a PUT request to update an object at a given URL.\r\n   * @param {string} url - The URL where the object is created.\r\n   * @param {Object} obj - The object to be created.\r\n   * @param {Class} model - Modal to deserialize on\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<Object>} Resolves with the created object.\r\n   * @throws {Error} Rejects if the URL or object is invalid or if the request fails.\r\n   */",
      "meta": {
        "range": [
          15943,
          17441
        ],
        "filename": "SdkBase.js",
        "lineno": 447,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100004365",
          "name": "putUpdate",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "obj",
            "model",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sends a PUT request to update an object at a given URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL where the object is created.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object to be created.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "Resolves with the created object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL or object is invalid or if the request fails."
        }
      ],
      "name": "putUpdate",
      "longname": "putUpdate",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Sends a DELETE request to remove an object at a given URL.\r\n   * @param {string} url - The URL of the object to delete.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<void>} Resolves if the object is successfully deleted.\r\n   * @throws {Error} Rejects if the URL is invalid or if the request fails.\r\n   */",
      "meta": {
        "range": [
          17851,
          19125
        ],
        "filename": "SdkBase.js",
        "lineno": 494,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100004548",
          "name": "delete",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sends a DELETE request to remove an object at a given URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL of the object to delete.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "Resolves if the object is successfully deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL is invalid or if the request fails."
        }
      ],
      "name": "delete",
      "longname": "delete",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Submits data using a POST request to a given URL.\r\n   * @param {string} url - The URL to post data to.\r\n   * @param {Object|string} data - The data to send in the POST request.\r\n   * @param {Class} model - Modal to deserialize on\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<Object>} Resolves with the response data.\r\n   * @throws {Error} Rejects if the URL or data is invalid or if the request fails.\r\n   */",
      "meta": {
        "range": [
          19640,
          21063
        ],
        "filename": "SdkBase.js",
        "lineno": 537,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100004703",
          "name": "post",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "data",
            "model",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Submits data using a POST request to a given URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to post data to.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Object",
              "string"
            ]
          },
          "description": "The data to send in the POST request.",
          "name": "data"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "Resolves with the response data."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL or data is invalid or if the request fails."
        }
      ],
      "name": "post",
      "longname": "post",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Sends a DELETE request to remove an object at a given URL.\r\n   * @param {string} url - The URL of the object to delete.\r\n   * @param {Object} obj - The object to be created.\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token for cancelling the request.\r\n   * @return {Promise<void>} Resolves if the object is successfully deleted.\r\n   * @throws {Error} Rejects if the URL is invalid, the object is not serializable, or if the request fails.\r\n   */",
      "meta": {
        "range": [
          21560,
          23402
        ],
        "filename": "SdkBase.js",
        "lineno": 584,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100004872",
          "name": "deleteMany",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "obj",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sends a DELETE request to remove an object at a given URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL of the object to delete.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object to be created.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token for cancelling the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "Resolves if the object is successfully deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Rejects if the URL is invalid, the object is not serializable, or if the request fails."
        }
      ],
      "name": "deleteMany",
      "longname": "deleteMany",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Submits a POST request.\r\n   * @param {string} url - The URL to which the request is sent.\r\n   * @param {Object} obj - The object to send in the POST request body.\r\n   * @param {Class} model - Modal to deserialize on\r\n   * @param {AbortController} [cancellationToken] - Optional cancellation token to cancel the request.\r\n   * @returns {Promise<Object|null>} The response data parsed as an object of type Object, or null if unsuccessful.\r\n   * @throws {Error} If the URL is invalid or the object cannot be serialized to JSON.\r\n   */",
      "meta": {
        "range": [
          23953,
          25959
        ],
        "filename": "SdkBase.js",
        "lineno": 647,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base",
        "code": {
          "id": "astnode100005091",
          "name": "postBatch",
          "type": "MethodDefinition",
          "paramnames": [
            "url",
            "obj",
            "model",
            "cancellationToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Submits a POST request.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to which the request is sent.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object to send in the POST request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "AbortController"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to cancel the request.",
          "name": "cancellationToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Object|null)>"
            ]
          },
          "description": "The response data parsed as an object of type Object, or null if unsuccessful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL is invalid or the object cannot be serialized to JSON."
        }
      ],
      "name": "postBatch",
      "longname": "postBatch",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "kind": "package",
      "longname": "package:undefined",
      "files": [
        "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base\\LiteGraphSdk.js",
        "D:\\Projects\\ViewIo\\repo\\lite-graph-js\\src\\base\\SdkBase.js"
      ]
    }
  ]
}